<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutWindow_AdditionalInfo" xml:space="preserve">
    <value>Дополнительна информация</value>
  </data>
  <data name="AboutWindow_packages" xml:space="preserve">
    <value>Сторонние Пакеты:
	Newtonsoft.Json (MIT) / https://github.com/JamesNK/Newtonsoft.Json
Сторонние Значки:
	https://icons8.com
Сторонние Шрифты:
	Roboto (Apache License 2.0) / https://github.com/google/roboto</value>
  </data>
  <data name="AddActionWindow" xml:space="preserve">
    <value>Создать действие</value>
  </data>
  <data name="AddActionWindow_ActionType" xml:space="preserve">
    <value>Тип действия</value>
  </data>
  <data name="AddWarning" xml:space="preserve">
    <value>ВНИМАНИЕ:
Стоит иметь в виду, что если действие не имеет собственного возвращаемого результата, то действие вернёт (пробросит) результат предыдущего действия.</value>
  </data>
  <data name="CloseMessage" xml:space="preserve">
    <value>Вы действительно хотите выйти из программы?</value>
  </data>
  <data name="CloseMessageTitle" xml:space="preserve">
    <value>Выход</value>
  </data>
  <data name="ConfigVersion" xml:space="preserve">
    <value>Версия конфигурации</value>
  </data>
  <data name="Continue" xml:space="preserve">
    <value>Продолжить</value>
  </data>
  <data name="Core" xml:space="preserve">
    <value>Ядро</value>
  </data>
  <data name="CoreSettingWindow" xml:space="preserve">
    <value>Параметры ядра</value>
  </data>
  <data name="CoreSettingWindow_CoreSettings" xml:space="preserve">
    <value>Настройки ядра</value>
  </data>
  <data name="CoreSettingWindow_DefaultCore" xml:space="preserve">
    <value>Использовать базовое ядро</value>
  </data>
  <data name="CoreSettingWindow_LoadPlugin" xml:space="preserve">
    <value>Загружать плагины</value>
  </data>
  <data name="CoreSettingWindow_NotificationChannelSettings" xml:space="preserve">
    <value>Настройки каналов уведомлений</value>
  </data>
  <data name="CoreSettingWindow_SmtpHost" xml:space="preserve">
    <value>Smtp хост</value>
  </data>
  <data name="CoreSettingWindow_SmtpLogin" xml:space="preserve">
    <value>Smtp логин</value>
  </data>
  <data name="CoreSettingWindow_SmtpPassword" xml:space="preserve">
    <value>Smtp пароль</value>
  </data>
  <data name="CoreSettingWindow_SmtpPort" xml:space="preserve">
    <value>Smtp порт</value>
  </data>
  <data name="DeleteMessage" xml:space="preserve">
    <value>Вы действительно хотите удалить элемент?</value>
  </data>
  <data name="DeleteMessageTitle" xml:space="preserve">
    <value>Удалить?</value>
  </data>
  <data name="Description_GetMousePos" xml:space="preserve">
    <value>Получает текущую позицию курсора, результат может быть переданн следующему вызову, или запулин в стек.</value>
  </data>
  <data name="Description_GetObject" xml:space="preserve">
    <value>Данное действие получает информацию об объекте находящемся в указанной позиции. 
К такой информации относится:
Type - Тип объекта
Titile - Наименование
Pos - Позиция
Size - Размер
И дескриптор объекта
Результат исполнения может быть передан следующему вызову.</value>
  </data>
  <data name="Description_GetScreenshot" xml:space="preserve">
    <value>Функция создаёт скриншот экрана. Данное действие может возвращать чёрный экран в DX приложениях.</value>
  </data>
  <data name="Description_GOTO" xml:space="preserve">
    <value>Оператор безусловного перехода к определённой точке программы, обозначенной  меткой.
Область видимости оператора ограниченна текущим уровнем вложенности.</value>
  </data>
  <data name="Description_If" xml:space="preserve">
    <value>Оператор условного ветвления, В РАЗРАБОТКЕ</value>
  </data>
  <data name="Description_KeyBoard" xml:space="preserve">
    <value>Действие нажатия одной или нескольких клавиш последовательно.</value>
  </data>
  <data name="Description_KeyBoardKeys" xml:space="preserve">
    <value>Действие нажатия одновременно нескольких клавиш на клавиатуре.
Иначе говоря нажатие сочитания клавиш.</value>
  </data>
  <data name="Description_Label" xml:space="preserve">
    <value>Метка, указывает целевую точку для перехода в программе, например: goto метка.
Действие оператора GOTO состоит в том, что после его исполнения следующими будут исполняться операторы программы, идущие в тексте непосредственно после метки.</value>
  </data>
  <data name="Description_Loop" xml:space="preserve">
    <value>Оператор цикла, выполняет список указанных действий, указанное колличество раз.
Внимание! При использовании стека в цикле следите за тем что бы он не переполнялся!</value>
  </data>
  <data name="Description_Mock" xml:space="preserve">
    <value>Нечего не делает, дебаговый объект.</value>
  </data>
  <data name="Description_MouseLClick" xml:space="preserve">
    <value>Щелчёк левой кнопки мыши</value>
  </data>
  <data name="Description_MouseLPress" xml:space="preserve">
    <value>Действие зажатия левой кнопки мыши.
Мышка не будет отжата до тех пор пока не будет вызвано соответсвующее событие.
Это может быть полезно если например надо что то перетащить.</value>
  </data>
  <data name="Description_MouseLUp" xml:space="preserve">
    <value>Действие отжатия левой кнопки мышки.</value>
  </data>
  <data name="Description_MouseMove" xml:space="preserve">
    <value>Действие перемещения мышки в указанную позицию.
Мышка может быть перемещена как и на указанное смещение, так и к конкретному объекту, который является результатом предыдущего вызова.</value>
  </data>
  <data name="Description_MouseRClick" xml:space="preserve">
    <value>Выполнить щелчёк правой кнопкой мышки</value>
  </data>
  <data name="Description_MouseRPress" xml:space="preserve">
    <value>Действие зажатия правой кнопки мыши</value>
  </data>
  <data name="Description_MouseRUp" xml:space="preserve">
    <value>Действие отжатия правой кнопки мыши</value>
  </data>
  <data name="Description_MouseSetPos" xml:space="preserve">
    <value>Поставить курсор в указанную позицию. Позиция не может принимать отрицательные значения по оси координат. Однако может рассчитывать относительно какого либо объекта, например окна, явлющегося результатом вызова функции ExpectWindow</value>
  </data>
  <data name="Description_PluginAct" xml:space="preserve">
    <value>Описание действий к исполнению для плагина.
В данный момент находится в разработке.</value>
  </data>
  <data name="Description_PluginInvoke" xml:space="preserve">
    <value>Вызывает плагин и передаёт ему список указанных действий. </value>
  </data>
  <data name="Description_SendMessage" xml:space="preserve">
    <value>Функция инициирует отправку заданного сообщения на указанный канал связи.
На текущий момент поддерживается только емайл.</value>
  </data>
  <data name="Description_Sleep" xml:space="preserve">
    <value>Действия сна бота. То есть пока не закончится указанное время, бот не перейдёт к следующей комманде.</value>
  </data>
  <data name="Description_Stack" xml:space="preserve">
    <value>Представляет собой список результатов выполнений, организованных по принципу LIFO.</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Произошла ошибка</value>
  </data>
  <data name="HideDetails" xml:space="preserve">
    <value>Скрыть детали</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Язык</value>
  </data>
  <data name="Language_eng" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="Language_rus" xml:space="preserve">
    <value>Русский</value>
  </data>
  <data name="NewDocMessage" xml:space="preserve">
    <value>Текущий документ не пуст. Создание нового документа приведёт к удалению всех не сохранёных изменений. Вы хотите продолжить?</value>
  </data>
  <data name="NewDocMessageTitle" xml:space="preserve">
    <value>Новый документ</value>
  </data>
  <data name="NotSupported" xml:space="preserve">
    <value>Не поддерживается</value>
  </data>
  <data name="NotSupportedMessage" xml:space="preserve">
    <value>Для данного действия множественные под действия не поддерживаются.</value>
  </data>
  <data name="NotSupportedMessageTitle" xml:space="preserve">
    <value>Не поддерживается</value>
  </data>
  <data name="SaveCommandMessage" xml:space="preserve">
    <value>Вы действительно хотите сохранить изменения?</value>
  </data>
  <data name="SaveCommandMessageTitle" xml:space="preserve">
    <value>Сохранить</value>
  </data>
  <data name="ShowDetails" xml:space="preserve">
    <value>Показать детали</value>
  </data>
  <data name="Text_Abort" xml:space="preserve">
    <value>Прервать!</value>
  </data>
  <data name="Text_About" xml:space="preserve">
    <value>О программе</value>
  </data>
  <data name="Text_Actions" xml:space="preserve">
    <value>Действия</value>
  </data>
  <data name="Text_Add" xml:space="preserve">
    <value>Добавить</value>
  </data>
  <data name="Text_Cancel" xml:space="preserve">
    <value>Отмена</value>
  </data>
  <data name="Text_Close" xml:space="preserve">
    <value>Закрыть</value>
  </data>
  <data name="Text_Delete" xml:space="preserve">
    <value>Удалить</value>
  </data>
  <data name="Text_Edit" xml:space="preserve">
    <value>Редактировать</value>
  </data>
  <data name="Text_ErrorList" xml:space="preserve">
    <value>Список ошибок</value>
  </data>
  <data name="Text_Exit" xml:space="preserve">
    <value>Выход</value>
  </data>
  <data name="Text_False" xml:space="preserve">
    <value>Отключено</value>
  </data>
  <data name="Text_Height" xml:space="preserve">
    <value>Высота: </value>
  </data>
  <data name="Text_Help" xml:space="preserve">
    <value>Справка</value>
  </data>
  <data name="Text_Json" xml:space="preserve">
    <value>Json</value>
  </data>
  <data name="Text_Logs" xml:space="preserve">
    <value>Логи</value>
  </data>
  <data name="Text_New" xml:space="preserve">
    <value>Новый</value>
  </data>
  <data name="Text_Null" xml:space="preserve">
    <value>По умолчанию</value>
  </data>
  <data name="Text_Open" xml:space="preserve">
    <value>Открыть</value>
  </data>
  <data name="Text_Run" xml:space="preserve">
    <value>Старт</value>
  </data>
  <data name="Text_Save" xml:space="preserve">
    <value>Сохранить</value>
  </data>
  <data name="Text_SaveAs" xml:space="preserve">
    <value>Сохранить как</value>
  </data>
  <data name="Text_Settings" xml:space="preserve">
    <value>Параметры ядра</value>
  </data>
  <data name="Text_True" xml:space="preserve">
    <value>Включено</value>
  </data>
  <data name="Text_Width" xml:space="preserve">
    <value>Ширина: </value>
  </data>
  <data name="Title_AboutWin" xml:space="preserve">
    <value>О программе: Консоль управления для бота</value>
  </data>
  <data name="Title_MainWin" xml:space="preserve">
    <value>Консоль управления для бота</value>
  </data>
  <data name="Version" xml:space="preserve">
    <value>Версия:</value>
  </data>
  <data name="AddBotActionWindow" xml:space="preserve">
    <value>Добавление/Редактирование</value>
  </data>
  <data name="SaveFileParamUserControl_FileName" xml:space="preserve">
    <value>Имя файла</value>
  </data>
  <data name="SaveFileParamUserControl_Path" xml:space="preserve">
    <value>Путь</value>
  </data>
  <data name="SaveFileParamUserControl_Type" xml:space="preserve">
    <value>Тип файла</value>
  </data>
  <data name="SaveFileParamUserControl_SaveFile" xml:space="preserve">
    <value>Сохранить файл</value>
  </data>
  <data name="CoreSettingWindow_Priority" xml:space="preserve">
    <value>Приоритеты</value>
  </data>
  <data name="Text_Path" xml:space="preserve">
    <value>Путь</value>
  </data>
  <data name="Description_ExpectWindow" xml:space="preserve">
    <value>указывает что бот должен ожидать появления окна с указанным заголовком, только после его появления будет продолжено исполнение инструкций</value>
  </data>
  <data name="ConditionalEditorWindow" xml:space="preserve">
    <value>Редактор условий</value>
  </data>
  <data name="CoreSettingWindow_KeyBoardInputMethod" xml:space="preserve">
    <value>Метод ввода с клавы</value>
  </data>
</root>